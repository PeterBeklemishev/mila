*******************************************************************************
*                                                                             *
*                 ARM C CROSS COMPILER Version 1.03.121111                    *
*                      Copyright (C) 2009 Phyton, Inc.                        *
*                                                                             *
*******************************************************************************

         InitPortJoystick??T:
;FILE: ..\src\joystick.c
;000033    void InitPortJoystick(void) {
;000034        PORTB->FUNC  &= ~((0xF << (5 << 1)));   /* Main Function для UP - PB5, RIGNHT - PB6 */
00000000    480D                       	LDR             R0,?lr0000	; 400B0008h
00000002    6801                       	LDR             R1,[R0,#0]
00000004    5170F421                   	BIC             R1,R1,#3C00h
00000008    6001                       	STR             R1,[R0,#0]
;000035        PORTB->ANALOG |= 0x3 << 5;     /* Digital */
0000000A    6841                       	LDR             R1,[R0,#4]
0000000C    0160F041                   	ORR             R1,R1,#96
00000010    6041                       	STR             R1,[R0,#4]
;000037        PORTC->FUNC &= ~((0x3 << (2 << 1)));   /* Main Function для SEL - PC2 */
00000012    480A                       	LDR             R0,?lr0001	; 400B8008h
00000014    6801                       	LDR             R1,[R0,#0]
00000016    0130F021                   	BIC             R1,R1,#48
0000001A    6001                       	STR             R1,[R0,#0]
;000038        PORTC->ANALOG |= 0x1 << 2;     /* Digital */
0000001C    6841                       	LDR             R1,[R0,#4]
0000001E    0104F041                   	ORR             R1,R1,#4
00000022    6041                       	STR             R1,[R0,#4]
;000040        PORTE->FUNC &= ~((0b110011 << (1 << 1)));   /* Main Function для DOWN - PE1, LEFT - PE3*/
00000024    4806                       	LDR             R0,?lr0002	; 400C8008h
00000026    6801                       	LDR             R1,[R0,#0]
00000028    01CCF021                   	BIC             R1,R1,#0CCh
0000002C    6001                       	STR             R1,[R0,#0]
;000041        PORTE->ANALOG |= 0x5 << 1;     /* Digital */
0000002E    6841                       	LDR             R1,[R0,#4]
00000030    010AF041                   	ORR             R1,R1,#10
00000034    6041                       	STR             R1,[R0,#4]
;000042    }
00000036    4770                       	BX              R14

00000038    400B0008	?lr0000	.DCD	400B0008h	; used 1 time(s)
0000003C    400B8008	?lr0001	.DCD	400B8008h	; used 1 time(s)
00000040    400C8008	?lr0002	.DCD	400C8008h	; used 1 time(s)

.ENDF
                   GetKey??T:
;000045    KeyCode GetKey(void) {
00000044    B510                       	PUSH            {R4,R14} 
00000046    B085                       	SUB             R13,R13,#20
;000051        for(i=0;i<5;i++)
00000048    2000                       	MOVS            i?GetKey,#0
                   ??_1_LOOP:
;000052        {
;000053          data[i] = 1;
0000004A    2101                       	MOVS            R1,#1
0000004C    AB00                       	ADD             R3,R13,#data?GetKey
0000004E    1020F843                   	STR             R1,[R3,i?GetKey,LSL #2]
;000054        }
00000052    1C40                       	ADDS            i?GetKey,i?GetKey,#1
00000054    2805                       	CMP             i?GetKey,#5
00000056    D3F8                       	BCC.N           ??_1_LOOP
;000057        if(PORTC->RXTX & (1<<2)) data[0] = 0;   /* SEL      PC2*/
00000058    481B                       	LDR             R0,?lr0003	; 400B8000h
0000005A    6800                       	LDR             R0,[R0,#0]
0000005C    0780                       	LSLS            R0,R0,#30
0000005E    D301                       	BCC.N           ??_2_ELSE
00000060    2000                       	MOVS            R0,#0
00000062    9000                       	STR             R0,[R13,#data?GetKey]
                   ??_2_ELSE:
;000058        if(PORTB->RXTX & (1<<6)) data[1] = 0;   /* RIGHT    PB6*/
00000064    4A19                       	LDR             R2,?lr0004	; 400B0000h
00000066    6810                       	LDR             R0,[R2,#0]
00000068    0680                       	LSLS            R0,R0,#26
0000006A    D301                       	BCC.N           ??_3_ELSE
0000006C    2000                       	MOVS            R0,#0
0000006E    9001                       	STR             R0,[R13,#(data?GetKey+4)]
                   ??_3_ELSE:
;000059        if(PORTE->RXTX & (1<<3)) data[2] = 0;   /* LEFT     PE3*/
00000070    4917                       	LDR             R1,?lr0005	; 400C8000h
00000072    6808                       	LDR             R0,[R1,#0]
00000074    0740                       	LSLS            R0,R0,#29
00000076    D301                       	BCC.N           ??_4_ELSE
00000078    2000                       	MOVS            R0,#0
0000007A    9002                       	STR             R0,[R13,#(data?GetKey+8)]
                   ??_4_ELSE:
;000060        if(PORTB->RXTX & (1<<5)) data[3] = 0;   /* UP       PB5*/
0000007C    6810                       	LDR             R0,[R2,#0]
0000007E    06C0                       	LSLS            R0,R0,#27
00000080    D301                       	BCC.N           ??_5_ELSE
00000082    2000                       	MOVS            R0,#0
00000084    9003                       	STR             R0,[R13,#(data?GetKey+12)]
                   ??_5_ELSE:
;000061        if(PORTE->RXTX & (1<<1)) data[4] = 0;   /* DOWN     PE1*/
00000086    6808                       	LDR             R0,[R1,#0]
00000088    07C0                       	LSLS            R0,R0,#31
0000008A    D301                       	BCC.N           ??_6_ELSE
0000008C    2000                       	MOVS            R0,#0
0000008E    9004                       	STR             R0,[R13,#(data?GetKey+16)]
                   ??_6_ELSE:
;000064        sKey=0;
00000090    2100                       	MOVS            sKey?GetKey,#0
;000065        for(i=0;i<5;i++)
00000092    2000                       	MOVS            i?GetKey,#0
                   ??_7_LOOP:
;000066        {
;000067          sKey = sKey + data[i];
00000094    2020F853                   	LDR             R2,[R3,i?GetKey,LSL #2]
00000098    4411                       	ADD             sKey?GetKey,R2
;000068        }
0000009A    1C40                       	ADDS            i?GetKey,i?GetKey,#1
0000009C    2805                       	CMP             i?GetKey,#5
0000009E    D3F9                       	BCC.N           ??_7_LOOP
;000070        if(sKey == 0) /* NOKEY    */
000000A0    B909                       	CBNZ            sKey?GetKey,??_8_ELSE
;000071        {
;000072          return NOKEY;
000000A2    2000                       	MOVS            R0,#0
000000A4    E00D                       	B.N             ??_EXIT?_GetKey
;000073        }
                   ??_8_ELSE:
;000074        else if(sKey > 1)  /* MULTIPLE */
000000A6    2902                       	CMP             sKey?GetKey,#2
000000A8    D301                       	BCC.N           ??_9_ELSE
;000075        {
;000076          return MULTIPLE;
000000AA    2006                       	MOVS            R0,#6
000000AC    E009                       	B.N             ??_EXIT?_GetKey
;000077        }
                   ??_9_ELSE:
;000080        for(i=0;i<5;i++)
000000AE    2000                       	MOVS            i?GetKey,#0
                  ??_10_LOOP:
;000081        {
;000082          if(data[i] == 1)
000000B0    1020F853                   	LDR             R1,[R3,i?GetKey,LSL #2]
000000B4    2901                       	CMP             R1,#1
000000B6    D101                       	BNE.N           ??_11_ELSE
;000083          {
;000084            return ((KeyCode)(i+1));
000000B8    1C40                       	ADDS            i?GetKey,i?GetKey,#1
000000BA    E002                       	B.N             ??_EXIT?_GetKey
;000085          }
                  ??_11_ELSE:
;000086        }
000000BC    1C40                       	ADDS            i?GetKey,i?GetKey,#1
000000BE    2805                       	CMP             i?GetKey,#5
000000C0    D3F6                       	BCC.N           ??_10_LOOP
;000087    }
             ??_EXIT?_GetKey:
000000C2    B005                       	ADD             R13,R13,#20
000000C4    BD10                       	POP             {R4,R15} 

.ALIGN	2
000000C8    400B8000	?lr0003	.DCD	400B8000h	; used 1 time(s)
000000CC    400B0000	?lr0004	.DCD	400B0000h	; used 1 time(s)
000000D0    400C8000	?lr0005	.DCD	400C8000h	; used 1 time(s)

.ENDF

..\src\joystick.c: 212 byte(s), 5168 line(s), 0 error(s), 0 warning(s)

