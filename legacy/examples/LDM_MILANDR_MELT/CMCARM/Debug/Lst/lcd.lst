*******************************************************************************
*                                                                             *
*                 ARM C CROSS COMPILER Version 1.03.121111                    *
*                      Copyright (C) 2009 Phyton, Inc.                        *
*                                                                             *
*******************************************************************************

               WRITE_DATA??T:
;FILE: ..\src\lcd.c
;000054    void WRITE_DATA(u32 data)
00000000    B510                       	PUSH            {R4,R14} 
;000056      PORTA->RXTX |= (data & 0x003F);
00000002    023FF000                   	AND             R2,data?WRITE_DATA,#63
00000006    4911                       	LDR             R1,?lr0000	; 400A8000h
00000008    680B                       	LDR             R3,[R1,#0]
0000000A    431A                       	ORRS            R2,R3
0000000C    600A                       	STR             R2,[R1,#0]
;000057      PORTA->RXTX &= ~(~data & 0x003F);
0000000E    43C2                       	MVNS            R2,data?WRITE_DATA
00000010    033FF002                   	AND             R3,R2,#63
00000014    680A                       	LDR             R2,[R1,#0]
00000016    439A                       	BICS            R2,R3
00000018    600A                       	STR             R2,[R1,#0]
;000058      PORTF->RXTX |= ((data>>4) & 0x000C);
0000001A    0904                       	LSRS            R4,data?WRITE_DATA,#4
0000001C    020CF004                   	AND             R2,R4,#12
00000020    490B                       	LDR             R1,?lr0001	; 400E8000h
00000022    680B                       	LDR             R3,[R1,#0]
00000024    431A                       	ORRS            R2,R3
00000026    600A                       	STR             R2,[R1,#0]
;000059      PORTF->RXTX &= ~(~(data>>4) & 0x000C);
00000028    43E0                       	MVNS            R0,R4
0000002A    000CF000                   	AND             R0,R0,#12
0000002E    680A                       	LDR             R2,[R1,#0]
00000030    4382                       	BICS            R2,R0
00000032    600A                       	STR             R2,[R1,#0]
;000060    }
00000034    BD10                       	POP             {R4,R15} 
.ENDF
                READ_DATA??T:
;000062    u32 READ_DATA()
;000066      ret = (PORTA->RXTX & 0x003F) + ((PORTF->RXTX & 0x000C) << 4);
00000036    4806                       	LDR             ret?READ_DATA,?lr0001	; 400E8000h
00000038    6800                       	LDR             ret?READ_DATA,[ret?READ_DATA,#0]
0000003A    010CF000                   	AND             R1,ret?READ_DATA,#12
0000003E    4803                       	LDR             ret?READ_DATA,?lr0000	; 400A8000h
00000040    6800                       	LDR             ret?READ_DATA,[ret?READ_DATA,#0]
00000042    003FF000                   	AND             ret?READ_DATA,ret?READ_DATA,#63
00000046    1001EB00                   	ADD             ret?READ_DATA,ret?READ_DATA,R1,LSL #4
;000068      return ret;
;000069    }
0000004A    4770                       	BX              R14

0000004C    400A8000	?lr0000	.DCD	400A8000h	; used 2 time(s)
00000050    400E8000	?lr0001	.DCD	400E8000h	; used 2 time(s)

.ENDF
                 ResetLCD??T:
;000075    void ResetLCD(void) {
;000084        PORTB->RXTX |= 0x00000200;
00000054    48AC                       	LDR             R0,?lr0002	; 400B0000h
00000056    6801                       	LDR             R1,[R0,#0]
00000058    7100F441                   	ORR             R1,R1,#200h
0000005C    6001                       	STR             R1,[R0,#0]
;000085        PORTB->OE |= 0x00000200;
0000005E    6841                       	LDR             R1,[R0,#4]
00000060    7100F441                   	ORR             R1,R1,#200h
00000064    6041                       	STR             R1,[R0,#4]
;000086        for (i = 0; i < 500; i++)
00000066    2100                       	MOVS            i?ResetLCD,#0
                   ??_1_LOOP:
;000087          PORTB->RXTX &= ~0x00000200;
00000068    6802                       	LDR             R2,[R0,#0]
0000006A    7200F422                   	BIC             R2,R2,#200h
0000006E    6002                       	STR             R2,[R0,#0]
00000070    1C49                       	ADDS            i?ResetLCD,i?ResetLCD,#1
00000072    7FFAF5B1                   	CMP             i?ResetLCD,#1F4h
00000076    D3F7                       	BCC.N           ??_1_LOOP
;000088        PORTB->RXTX |= 0x00000200;
00000078    6801                       	LDR             R1,[R0,#0]
0000007A    7100F441                   	ORR             R1,R1,#200h
0000007E    6001                       	STR             R1,[R0,#0]
;000089    }
00000080    4770                       	BX              R14
.ENDF
              InitPortLCD??T:
;000092    void InitPortLCD(void) {
00000082    B510                       	PUSH            {R4,R14} 
;000093        PORTA->FUNC &= ~(0x00000FFF);   /* Main Function для DATA[5:0] */
00000084    4BA1                       	LDR             R3,?lr0003	; 400A8004h
00000086    6858                       	LDR             R0,[R3,#4]
00000088    000BF36F                   	BFC             R0,#0,#12
0000008C    6058                       	STR             R0,[R3,#4]
;000094        PORTA->ANALOG |= 0x003F;     /* Digital */
0000008E    6898                       	LDR             R0,[R3,#8]
00000090    003FF040                   	ORR             R0,R0,#63
00000094    6098                       	STR             R0,[R3,#8]
;000095        PORTA->PWR |= 0x00000AAA;    /* Fast */
00000096    6958                       	LDR             R0,[R3,#20]
00000098    21AAF640                   	MOV             R1,#0AAAh
0000009C    4308                       	ORRS            R0,R1
0000009E    6158                       	STR             R0,[R3,#20]
;000096        PORTA->PULL |= 0x0000003F;    /* DOWN */
000000A0    68D8                       	LDR             R0,[R3,#12]
000000A2    003FF040                   	ORR             R0,R0,#63
000000A6    60D8                       	STR             R0,[R3,#12]
;000098        PORTB->FUNC &= ~(0x003FC000);   /* Main Function для E1=B7 & E2=B8 & Reset=B9 & RW=B10 */
000000A8    4A97                       	LDR             R2,?lr0002	; 400B0000h
000000AA    6890                       	LDR             R0,[R2,#8]
000000AC    107FF420                   	BIC             R0,R0,#3FC000h
000000B0    6090                       	STR             R0,[R2,#8]
;000099        PORTB->ANALOG |= 0x0780;     /* Digital */
000000B2    68D0                       	LDR             R0,[R2,#12]
000000B4    60F0F440                   	ORR             R0,R0,#780h
000000B8    60D0                       	STR             R0,[R2,#12]
;000100        PORTB->PWR |= 0x002A8000;    /* Fast */
000000BA    6990                       	LDR             R0,[R2,#24]
000000BC    102AF440                   	ORR             R0,R0,#2A8000h
000000C0    6190                       	STR             R0,[R2,#24]
;000101        PORTB->OE |= 0x0780;
000000C2    6850                       	LDR             R0,[R2,#4]
000000C4    60F0F440                   	ORR             R0,R0,#780h
000000C8    6050                       	STR             R0,[R2,#4]
;000103        PORTC->FUNC &= ~(0x0000000F);   /* Main Function для E=1 & A0=0*/
000000CA    4891                       	LDR             R0,?lr0004	; 400B8000h
000000CC    6881                       	LDR             R1,[R0,#8]
000000CE    0909                       	LSRS            R1,R1,#4
000000D0    0109                       	LSLS            R1,R1,#4
000000D2    6081                       	STR             R1,[R0,#8]
;000104        PORTC->ANALOG |= 0x0003;     /* Digital */
000000D4    68C1                       	LDR             R1,[R0,#12]
000000D6    0103F041                   	ORR             R1,R1,#3
000000DA    60C1                       	STR             R1,[R0,#12]
;000105        PORTC->PWR |= 0x0000000A;    /* Fast */
000000DC    6981                       	LDR             R1,[R0,#24]
000000DE    010AF041                   	ORR             R1,R1,#10
000000E2    6181                       	STR             R1,[R0,#24]
;000106        PORTC->OE |= 0x0003;
000000E4    6841                       	LDR             R1,[R0,#4]
000000E6    0103F041                   	ORR             R1,R1,#3
000000EA    6041                       	STR             R1,[R0,#4]
;000108        PORTF->FUNC &= ~(0x000000F0);   /* Main Function для DATA[7:6] */
000000EC    4989                       	LDR             R1,?lr0005	; 400E8004h
000000EE    684C                       	LDR             R4,[R1,#4]
000000F0    04F0F024                   	BIC             R4,R4,#0F0h
000000F4    604C                       	STR             R4,[R1,#4]
;000109        PORTF->ANALOG |= 0x000C;     /* Digital */
000000F6    688C                       	LDR             R4,[R1,#8]
000000F8    040CF044                   	ORR             R4,R4,#12
000000FC    608C                       	STR             R4,[R1,#8]
;000110        PORTF->PWR |= 0x000000A0;    /* Fast */
000000FE    694C                       	LDR             R4,[R1,#20]
00000100    04A0F044                   	ORR             R4,R4,#0A0h
00000104    614C                       	STR             R4,[R1,#20]
;000111        PORTF->PULL |= 0x0000000C;    /* DOWN */
00000106    68CC                       	LDR             R4,[R1,#12]
00000108    040CF044                   	ORR             R4,R4,#12
0000010C    60CC                       	STR             R4,[R1,#12]
;000113        READ_RW();
0000010E    6814                       	LDR             R4,[R2,#0]
00000110    6480F444                   	ORR             R4,R4,#400h
00000114    6014                       	STR             R4,[R2,#0]
;000114        CLEAR_A0();
00000116    6802                       	LDR             R2,[R0,#0]
00000118    0852                       	LSRS            R2,R2,#1
0000011A    0052                       	LSLS            R2,R2,#1
0000011C    6002                       	STR             R2,[R0,#0]
;000115        SET_E();
0000011E    6802                       	LDR             R2,[R0,#0]
00000120    0202F042                   	ORR             R2,R2,#2
00000124    6002                       	STR             R2,[R0,#0]
;000117        DATA_LINE_READ();
00000126    6818                       	LDR             R0,[R3,#0]
00000128    0980                       	LSRS            R0,R0,#6
0000012A    0180                       	LSLS            R0,R0,#6
0000012C    6018                       	STR             R0,[R3,#0]
0000012E    6808                       	LDR             R0,[R1,#0]
00000130    000CF020                   	BIC             R0,R0,#12
00000134    6008                       	STR             R0,[R1,#0]
;000118    }
00000136    BD10                       	POP             {R4,R15} 
.ENDF
               InitExtBus??T:
;000121    void InitExtBus(void) {
;000122        EXT_BUS_CNTRL->EXT_BUS_CONTROL = 0x0000A001;
00000138    0101F24A                   	MOV             R1,#0A001h
0000013C    4801                       	LDR             R0,?lr0006	; 400F0054h
0000013E    6001                       	STR             R1,[R0,#0]
;000123    }
00000140    4770                       	BX              R14

.ALIGN	2
00000144    400F0054	?lr0006	.DCD	400F0054h	; used 1 time(s)

.ENDF
               SetCrystal??T:
;000126    void SetCrystal(LCD_Crystal num) {
;000127       PORTB->RXTX |= ((num + 1) << 7);
00000148    01C2                       	LSLS            R2,num?SetCrystal,#7
0000014A    3280                       	ADDS            R2,#80h
0000014C    496E                       	LDR             R1,?lr0002	; 400B0000h
0000014E    680B                       	LDR             R3,[R1,#0]
00000150    4313                       	ORRS            R3,R2
00000152    600B                       	STR             R3,[R1,#0]
;000128       PORTB->RXTX &= ~(~((num + 1) << 7)&(0b110000000));
00000154    43D2                       	MVNS            R2,R2
00000156    73C0F402                   	AND             R3,R2,#180h
0000015A    680A                       	LDR             R2,[R1,#0]
0000015C    439A                       	BICS            R2,R3
0000015E    600A                       	STR             R2,[R1,#0]
;000130       PORTB->OE |= 0b110000000;
00000160    684A                       	LDR             R2,[R1,#4]
00000162    72C0F442                   	ORR             R2,R2,#180h
00000166    604A                       	STR             R2,[R1,#4]
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
00000168    210F                       	MOVS            R1,#15
                   ??_2_LOOP:
0000016A    BF00                       	NOP             
0000016C    1E49                       	SUBS            R1,R1,#1
0000016E    D1FC                       	BNE.N           ??_2_LOOP
;000276    }
;000132       CurrentCrystal = num;
00000170    4901                       	LDR             R1,?lr0007	; CurrentCrystal
00000172    6008                       	STR             num?SetCrystal,[R1,#0]
;000133    }
00000174    4770                       	BX              R14

.ALIGN	2
00000178    00000000	?lr0007	.DCD	CurrentCrystal	; used 1 time(s)

.ENDF
             WriteLCD_Cmd??T:
;000135    void WriteLCD_Cmd(unsigned char val) {
0000017C    B510                       	PUSH            {R4,R14} 
;000136        SET_E();
0000017E    4C64                       	LDR             R4,?lr0004	; 400B8000h
00000180    6821                       	LDR             R1,[R4,#0]
00000182    0102F041                   	ORR             R1,R1,#2
00000186    6021                       	STR             R1,[R4,#0]
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
00000188    210F                       	MOVS            R1,#15
                   ??_3_LOOP:
0000018A    BF00                       	NOP             
0000018C    1E49                       	SUBS            R1,R1,#1
0000018E    D1FC                       	BNE.N           ??_3_LOOP
;000276    }
;000139        DATA_LINE_WRITE();
00000190    495E                       	LDR             R1,?lr0003	; 400A8004h
00000192    680A                       	LDR             R2,[R1,#0]
00000194    023FF042                   	ORR             R2,R2,#63
00000198    600A                       	STR             R2,[R1,#0]
0000019A    495E                       	LDR             R1,?lr0005	; 400E8004h
0000019C    680A                       	LDR             R2,[R1,#0]
0000019E    020CF042                   	ORR             R2,R2,#12
000001A2    600A                       	STR             R2,[R1,#0]
;000140        WRITE_RW();
000001A4    4958                       	LDR             R1,?lr0002	; 400B0000h
000001A6    680A                       	LDR             R2,[R1,#0]
000001A8    6280F422                   	BIC             R2,R2,#400h
000001AC    600A                       	STR             R2,[R1,#0]
;000141        CLEAR_A0();
000001AE    6821                       	LDR             R1,[R4,#0]
000001B0    0849                       	LSRS            R1,R1,#1
000001B2    0049                       	LSLS            R1,R1,#1
000001B4    6021                       	STR             R1,[R4,#0]
;000143        WRITE_DATA(val);
000001B6    FF23F7FF                   	BLF             WRITE_DATA??T
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
000001BA    210F                       	MOVS            R1,#15
                   ??_4_LOOP:
000001BC    BF00                       	NOP             
000001BE    1E49                       	SUBS            R1,R1,#1
000001C0    D1FC                       	BNE.N           ??_4_LOOP
;000276    }
;000146        CLEAR_E();
000001C2    6821                       	LDR             R1,[R4,#0]
000001C4    0102F021                   	BIC             R1,R1,#2
000001C8    6021                       	STR             R1,[R4,#0]
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
000001CA    210F                       	MOVS            R1,#15
                   ??_5_LOOP:
000001CC    BF00                       	NOP             
000001CE    1E49                       	SUBS            R1,R1,#1
000001D0    D1FC                       	BNE.N           ??_5_LOOP
;000276    }
;000150    }
000001D2    BD10                       	POP             {R4,R15} 
.ENDF
            WriteLCD_Data??T:
;000153    void WriteLCD_Data(unsigned char val) {
000001D4    B510                       	PUSH            {R4,R14} 
;000154        SET_E();
000001D6    4C4E                       	LDR             R4,?lr0004	; 400B8000h
000001D8    6821                       	LDR             R1,[R4,#0]
000001DA    0102F041                   	ORR             R1,R1,#2
000001DE    6021                       	STR             R1,[R4,#0]
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
000001E0    210F                       	MOVS            R1,#15
                   ??_6_LOOP:
000001E2    BF00                       	NOP             
000001E4    1E49                       	SUBS            R1,R1,#1
000001E6    D1FC                       	BNE.N           ??_6_LOOP
;000276    }
;000157        DATA_LINE_WRITE();
000001E8    4948                       	LDR             R1,?lr0003	; 400A8004h
000001EA    680A                       	LDR             R2,[R1,#0]
000001EC    023FF042                   	ORR             R2,R2,#63
000001F0    600A                       	STR             R2,[R1,#0]
000001F2    4948                       	LDR             R1,?lr0005	; 400E8004h
000001F4    680A                       	LDR             R2,[R1,#0]
000001F6    020CF042                   	ORR             R2,R2,#12
000001FA    600A                       	STR             R2,[R1,#0]
;000158        WRITE_RW();
000001FC    4942                       	LDR             R1,?lr0002	; 400B0000h
000001FE    680A                       	LDR             R2,[R1,#0]
00000200    6280F422                   	BIC             R2,R2,#400h
00000204    600A                       	STR             R2,[R1,#0]
;000159        SET_A0();
00000206    6821                       	LDR             R1,[R4,#0]
00000208    0101F041                   	ORR             R1,R1,#1
0000020C    6021                       	STR             R1,[R4,#0]
;000161        WRITE_DATA(val);
0000020E    FEF7F7FF                   	BLF             WRITE_DATA??T
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
00000212    210F                       	MOVS            R1,#15
                   ??_7_LOOP:
00000214    BF00                       	NOP             
00000216    1E49                       	SUBS            R1,R1,#1
00000218    D1FC                       	BNE.N           ??_7_LOOP
;000276    }
;000164        CLEAR_E();
0000021A    6821                       	LDR             R1,[R4,#0]
0000021C    0102F021                   	BIC             R1,R1,#2
00000220    6021                       	STR             R1,[R4,#0]
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
00000222    210F                       	MOVS            R1,#15
                   ??_8_LOOP:
00000224    BF00                       	NOP             
00000226    1E49                       	SUBS            R1,R1,#1
00000228    D1FC                       	BNE.N           ??_8_LOOP
;000276    }
;000168    }
0000022A    BD10                       	POP             {R4,R15} 
.ENDF
              ReadLCD_Cmd??T:
;000171    unsigned char ReadLCD_Cmd(void) {
0000022C    B500                       	PUSH            {R14} 
;000173        SET_E();
0000022E    4838                       	LDR             R0,?lr0004	; 400B8000h
00000230    6801                       	LDR             R1,[R0,#0]
00000232    0102F041                   	ORR             R1,R1,#2
00000236    6001                       	STR             R1,[R0,#0]
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
00000238    210F                       	MOVS            R1,#15
                   ??_9_LOOP:
0000023A    BF00                       	NOP             
0000023C    1E49                       	SUBS            R1,R1,#1
0000023E    D1FC                       	BNE.N           ??_9_LOOP
;000276    }
;000176        DATA_LINE_READ();
00000240    4932                       	LDR             R1,?lr0003	; 400A8004h
00000242    680A                       	LDR             R2,[R1,#0]
00000244    0992                       	LSRS            R2,R2,#6
00000246    0192                       	LSLS            R2,R2,#6
00000248    600A                       	STR             R2,[R1,#0]
0000024A    4932                       	LDR             R1,?lr0005	; 400E8004h
0000024C    680A                       	LDR             R2,[R1,#0]
0000024E    020CF022                   	BIC             R2,R2,#12
00000252    600A                       	STR             R2,[R1,#0]
;000177        READ_RW();
00000254    492C                       	LDR             R1,?lr0002	; 400B0000h
00000256    680A                       	LDR             R2,[R1,#0]
00000258    6280F442                   	ORR             R2,R2,#400h
0000025C    600A                       	STR             R2,[R1,#0]
;000178        CLEAR_A0();
0000025E    6801                       	LDR             R1,[R0,#0]
00000260    0849                       	LSRS            R1,R1,#1
00000262    0049                       	LSLS            R1,R1,#1
00000264    6001                       	STR             R1,[R0,#0]
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
00000266    210F                       	MOVS            R1,#15
                  ??_10_LOOP:
00000268    BF00                       	NOP             
0000026A    1E49                       	SUBS            R1,R1,#1
0000026C    D1FC                       	BNE.N           ??_10_LOOP
;000276    }
;000181        CLEAR_E();
0000026E    6801                       	LDR             R1,[R0,#0]
00000270    0102F021                   	BIC             R1,R1,#2
00000274    6001                       	STR             R1,[R0,#0]
;000183        ret = READ_DATA();
00000276    FEDEF7FF                   	BLF             READ_DATA??T
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
0000027A    210F                       	MOVS            R1,#15
                  ??_11_LOOP:
0000027C    BF00                       	NOP             
0000027E    1E49                       	SUBS            R1,R1,#1
00000280    D1FC                       	BNE.N           ??_11_LOOP
;000276    }
;000187        return ret;
00000282    B2C0                       	UXTB            ret?ReadLCD_Cmd,ret?ReadLCD_Cmd
;000188    }
00000284    BD00                       	POP             {R15} 
.ENDF
             ReadLCD_Data??T:
;000191    unsigned char ReadLCD_Data() {
00000286    B530                       	PUSH            {R4,R5,R14} 
;000193        SET_E();
00000288    4C21                       	LDR             R4,?lr0004	; 400B8000h
0000028A    6820                       	LDR             R0,[R4,#0]
0000028C    0002F040                   	ORR             R0,R0,#2
00000290    6020                       	STR             R0,[R4,#0]
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
00000292    250F                       	MOVS            R5,#15
                  ??_12_LOOP:
00000294    BF00                       	NOP             
00000296    1E6D                       	SUBS            R5,R5,#1
00000298    D1FC                       	BNE.N           ??_12_LOOP
;000276    }
;000197        DATA_LINE_READ();
0000029A    481C                       	LDR             R0,?lr0003	; 400A8004h
0000029C    6801                       	LDR             R1,[R0,#0]
0000029E    0989                       	LSRS            R1,R1,#6
000002A0    0189                       	LSLS            R1,R1,#6
000002A2    6001                       	STR             R1,[R0,#0]
000002A4    481B                       	LDR             R0,?lr0005	; 400E8004h
000002A6    6801                       	LDR             R1,[R0,#0]
000002A8    010CF021                   	BIC             R1,R1,#12
000002AC    6001                       	STR             R1,[R0,#0]
;000198        READ_RW();
000002AE    4816                       	LDR             R0,?lr0002	; 400B0000h
000002B0    6801                       	LDR             R1,[R0,#0]
000002B2    6180F441                   	ORR             R1,R1,#400h
000002B6    6001                       	STR             R1,[R0,#0]
;000199        SET_A0();
000002B8    6820                       	LDR             R0,[R4,#0]
000002BA    0001F040                   	ORR             R0,R0,#1
000002BE    6020                       	STR             R0,[R4,#0]
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
000002C0    250F                       	MOVS            R5,#15
000002C2    4628                       	MOV             R0,R5
                  ??_13_LOOP:
000002C4    BF00                       	NOP             
000002C6    1E40                       	SUBS            R0,R0,#1
000002C8    D1FC                       	BNE.N           ??_13_LOOP
;000276    }
;000202        CLEAR_E();
000002CA    6820                       	LDR             R0,[R4,#0]
000002CC    0002F020                   	BIC             R0,R0,#2
000002D0    6020                       	STR             R0,[R4,#0]
;000204        READ_DATA();  /* Первое чтение - необходимо для получения корректных данных */
000002D2    FEB0F7FF                   	BLF             READ_DATA??T
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
000002D6    4628                       	MOV             R0,R5
                  ??_14_LOOP:
000002D8    BF00                       	NOP             
000002DA    1E40                       	SUBS            R0,R0,#1
000002DC    D1FC                       	BNE.N           ??_14_LOOP
;000276    }
;000207        CLEAR_E();
000002DE    6820                       	LDR             R0,[R4,#0]
000002E0    0002F020                   	BIC             R0,R0,#2
000002E4    6020                       	STR             R0,[R4,#0]
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
000002E6    4628                       	MOV             R0,R5
                  ??_15_LOOP:
000002E8    BF00                       	NOP             
000002EA    1E40                       	SUBS            R0,R0,#1
000002EC    D1FC                       	BNE.N           ??_15_LOOP
;000276    }
;000209        SET_E();
000002EE    6820                       	LDR             R0,[R4,#0]
000002F0    0002F040                   	ORR             R0,R0,#2
000002F4    6020                       	STR             R0,[R4,#0]
;000211        ret = READ_DATA();
000002F6    FE9EF7FF                   	BLF             READ_DATA??T
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
000002FA    4629                       	MOV             R1,R5
                  ??_16_LOOP:
000002FC    BF00                       	NOP             
000002FE    1E49                       	SUBS            R1,R1,#1
00000300    D1FC                       	BNE.N           ??_16_LOOP
;000276    }
;000214        return ret;
00000302    B2C0                       	UXTB            ret?ReadLCD_Data,ret?ReadLCD_Data
;000215    }
00000304    BD30                       	POP             {R4,R5,R15} 

.ALIGN	2
00000308    400B0000	?lr0002	.DCD	400B0000h	; used 7 time(s)
0000030C    400A8004	?lr0003	.DCD	400A8004h	; used 5 time(s)
00000310    400B8000	?lr0004	.DCD	400B8000h	; used 5 time(s)
00000314    400E8004	?lr0005	.DCD	400E8004h	; used 5 time(s)

.ENDF
                 LCD_INIT??T:
;000218    void LCD_INIT(void) {
00000318    B530                       	PUSH            {R4,R5,R14} 
;000221        InitPortLCD();      /* Инициализация портов внешней шины и выводов для работы с экраном */
0000031A    FEB2F7FF                   	BLF             InitPortLCD??T
;000222        ResetLCD();         /* Программный сброс экрана */
0000031E    FE99F7FF                   	BLF             ResetLCD??T
;000225        for (crystal = LCD_CRYSTAL1; crystal < NUM_LCD_CRYSTALS; crystal++) {
00000322    2400                       	MOVS            crystal?LCD_INIT,#0
                  ??_17_LOOP:
;000226          SetCrystal((LCD_Crystal)crystal);
00000324    4620                       	MOV             R0,crystal?LCD_INIT
00000326    FF0FF7FF                   	BLF             SetCrystal??T
;000266    static void WaitStatus(LCD_Status status) {
;000268        for (stat = GetStatus(); stat == (1 << status); stat = GetStatus());
                  ??_18_LOOP:
0000032A    F845F000                   	BLF             Pause??T
0000032E    FF7DF7FF                   	BLF             ReadLCD_Cmd??T
00000332    4605                       	MOV             R5,R0
00000334    F840F000                   	BLF             Pause??T
00000338    2D80                       	CMP             R5,#80h
0000033A    D0F6                       	BEQ.N           ??_18_LOOP
;000269    }
;000228          LCD_ON;
0000033C    203F                       	MOVS            R0,#63
0000033E    FF1DF7FF                   	BLF             WriteLCD_Cmd??T
;000266    static void WaitStatus(LCD_Status status) {
;000268        for (stat = GetStatus(); stat == (1 << status); stat = GetStatus());
                  ??_19_LOOP:
00000342    F839F000                   	BLF             Pause??T
00000346    FF71F7FF                   	BLF             ReadLCD_Cmd??T
0000034A    4605                       	MOV             R5,R0
0000034C    F834F000                   	BLF             Pause??T
00000350    2D20                       	CMP             R5,#32
00000352    D0F6                       	BEQ.N           ??_19_LOOP
;000269    }
;000230          LCD_START_LINE(0);
00000354    20C0                       	MOVS            R0,#0C0h
00000356    FF11F7FF                   	BLF             WriteLCD_Cmd??T
;000231        }
0000035A    1C64                       	ADDS            crystal?LCD_INIT,crystal?LCD_INIT,#1
0000035C    2C02                       	CMP             crystal?LCD_INIT,#2
0000035E    D3E1                       	BCC.N           ??_17_LOOP
;000232    }
00000360    BD30                       	POP             {R4,R5,R15} 
.ENDF
                  LCD_CLS??T:
;000235    void LCD_CLS(void) {
00000362    B570                       	PUSH            {R4-R6,R14} 
;000239        for (crystal = LCD_CRYSTAL1; crystal < NUM_LCD_CRYSTALS; crystal++) {
00000364    2600                       	MOVS            crystal?LCD_CLS,#0
                  ??_20_LOOP:
;000240          SetCrystal((LCD_Crystal)crystal);
00000366    4630                       	MOV             R0,crystal?LCD_CLS
00000368    FEEEF7FF                   	BLF             SetCrystal??T
;000266    static void WaitStatus(LCD_Status status) {
;000268        for (stat = GetStatus(); stat == (1 << status); stat = GetStatus());
                  ??_21_LOOP:
0000036C    F824F000                   	BLF             Pause??T
00000370    FF5CF7FF                   	BLF             ReadLCD_Cmd??T
00000374    4604                       	MOV             R4,R0
00000376    F81FF000                   	BLF             Pause??T
0000037A    2C80                       	CMP             R4,#80h
0000037C    D0F6                       	BEQ.N           ??_21_LOOP
;000269    }
;000242          LCD_OFF;
0000037E    203E                       	MOVS            R0,#62
00000380    FEFCF7FF                   	BLF             WriteLCD_Cmd??T
;000243          LCD_SET_ADDRESS(0);
00000384    2040                       	MOVS            R0,#64
00000386    FEF9F7FF                   	BLF             WriteLCD_Cmd??T
;000244          for (i = 0; i < 8; i++) {
0000038A    2500                       	MOVS            i?LCD_CLS,#0
                  ??_22_LOOP:
;000245            LCD_SET_PAGE(i);
0000038C    00B8F045                   	ORR             R0,i?LCD_CLS,#0B8h
00000390    B2C0                       	UXTB            R0,R0
00000392    FEF3F7FF                   	BLF             WriteLCD_Cmd??T
;000246            for (j = 0; j < 64; j++)
00000396    2400                       	MOVS            j?LCD_CLS,#0
                  ??_23_LOOP:
;000247                WriteLCD_Data(0x00);
00000398    2000                       	MOVS            R0,#0
0000039A    FF1BF7FF                   	BLF             WriteLCD_Data??T
0000039E    1C64                       	ADDS            j?LCD_CLS,j?LCD_CLS,#1
000003A0    2C40                       	CMP             j?LCD_CLS,#64
000003A2    D3F9                       	BCC.N           ??_23_LOOP
;000248          }
000003A4    1C6D                       	ADDS            i?LCD_CLS,i?LCD_CLS,#1
000003A6    2D08                       	CMP             i?LCD_CLS,#8
000003A8    D3F0                       	BCC.N           ??_22_LOOP
;000249          LCD_ON;
000003AA    203F                       	MOVS            R0,#63
000003AC    FEE6F7FF                   	BLF             WriteLCD_Cmd??T
;000250        }
000003B0    1C76                       	ADDS            crystal?LCD_CLS,crystal?LCD_CLS,#1
000003B2    2E02                       	CMP             crystal?LCD_CLS,#2
000003B4    D3D7                       	BCC.N           ??_20_LOOP
;000251    }
000003B6    BD70                       	POP             {R4-R6,R15} 
.ENDF
                    Pause??T:
;000273    static void Pause(void) {
;000275        for (i = 15; i > 0; i--) __NOP();
000003B8    200F                       	MOVS            i?Pause,#15
                  ??_24_LOOP:
000003BA    BF00                       	NOP             
000003BC    1E40                       	SUBS            i?Pause,i?Pause,#1
000003BE    D1FC                       	BNE.N           ??_24_LOOP
;000276    }
000003C0    4770                       	BX              R14
.ENDF

..\src\lcd.c: 962 byte(s), 5395 line(s), 0 error(s), 0 warning(s)

